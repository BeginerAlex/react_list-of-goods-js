{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","prepareGoods","sort","good1","good2","localeCompare","length","getPrepareGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,sBACnBC,EAAiB,iBAyBhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA1BR,SAAyBC,EAAzB,GAAyD,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACvCI,EAAY,YAAOD,GAevB,OAbIL,IACFM,EAAeA,EAAaC,MAAK,SAACC,EAAOC,GACvC,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,OAKXT,EACKI,EAAaJ,UAGfI,EAMcM,CAAgBjB,EAAiB,CACpDK,YACAE,YAUF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPb,EAAaL,IAEfmB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYhB,IAAcJ,IANhC,iCAYA,wBACEkB,QAAS,WACPb,EAAaJ,IAEfkB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYhB,IAAcH,IANhC,4BAYA,wBACEiB,QAAS,WACPX,GAAYD,IAEda,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAad,IANnB,qBAYA,wBACEY,QA/Ca,YACfd,GAAaE,KACfD,EAAa,IACbE,GAAW,KA6CPY,KAAK,SACLF,UAAWG,IAAG,4BACZ,CAAE,cAAehB,GAAaE,KAJlC,sBAWF,6BACGE,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e0ebe6d2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nfunction getPrepareGoods(goods, { sortField, reverse }) {\n  let prepareGoods = [...goods];\n\n  if (sortField) {\n    prepareGoods = prepareGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPrepareGoods(goodsFromServer, {\n    sortField,\n    reverse,\n  });\n\n  const resetSorting = () => {\n    if (sortField || reverse) {\n      setSortField('');\n      setReverse(false);\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SORT_BY_ALPHABET);\n          }}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_BY_ALPHABET })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SORT_BY_LENGTH);\n          }}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReverse(!reverse);\n          }}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverse })\n          }\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={resetSorting}\n          type=\"button\"\n          className={cn('button is-danger is-light',\n            { 'is-hidden': !(sortField || reverse) })\n          }\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}